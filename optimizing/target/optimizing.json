{"noir_version":"0.31.0+540bef3597bd3e5775c83ec2ee3c0d4463084b4c","hash":5100228636918902140,"abi":{"parameters":[{"name":"num","type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"private"}],"return_type":{"abi_type":{"kind":"integer","sign":"unsigned","width":32},"visibility":"public"},"error_types":{}},"bytecode":"H4sIAAAAAAAA/7VW30/CMBBut7HNEFEfTTQpT/pmux/QvfmvjDAiCQRipsT/3k177rMOEkN3yXLl6N19993dgLNv8ZsnMmduPrcimmcEdlvI9my0PE+Uw1gS8Xp9+F2BJsI8Q9gQxHhWERQ3lbMsq+ZJpVJVyqRY6Fxm+WKmlVa5zpeJTtNKZ3peLIq5LFSWVmqVF+nKBPaZW8J98wiLa88xbpfcuuTgVM3yPPmaM1f8eY77Hlhzj8JBB2DH89Tosq6r7b4W9U5s3zb1er/5EId1/SJ279XrarM7cAh4BQHu/gYol8vjvg9n+D790/fHMTE6hgCCOeqElkkIwe1OeJg47nKPWTepZI9Y93PQfs9jiNHIDdg4uI5c19RMfZsfJwVzIockhGECfh5gDAfAyCEvxaacIWCOwIZ3yDeAO9eWRolZ10rhro4EMdJbfAQ5SV8MwOGY/eaQOEMRcCYME/CLAGPkHqMcs+6vEcVvc98Om7dseQghn+jBEcCdKdy9N+dL1u0D8YWcB2Cz5/LC+IeWHXesb85phvp2wX4HhlY9nHU9Dq07MWCmO49GH9uXAfqSYF+o1tiqA+cT8Q+wvwrxUGwfch7j1bfwIa/yBK/jHl/ch0/xfFnoXwwAAA==","debug_symbols":"ndXNisMgEAfwd/EcFnXGr7zKsiy2TZdAMKVJF5bQd1/TNj1UKcwcR/8/1PEwizh0u8vPd5+O4yTaz0UM4z7O/ZhytQh1W5pOMa3VNMfzLFr0jejSQbTGXRtx7Icur7nrVyM0LQ61uJOPuDcvcaTFzdt40C9x9eGowFNBoAIlyaL6ZVptRGtZGs0wwDDIMIZhbNXI8DSmNI5hPMMEutGSYRTD1HuNuBm0pbEMU+0BSPswAFAYAPo5gAxT7QGo5920L42tv8e9M45hPMMEukFJ/x9UDKMZBhgGGcYwjGUYRzO5+I3nPu6Gbp3Q694l7beBncv573Tfydl/","file_map":{"47":{"source":"fn main(num: u32) -> pub u32 {\n    let square = sqrt(num);\n    assert(square * square == num);\n    \n    square\n}\n\nunconstrained fn sqrt(num: u32) -> u32 {\n    let mut approx = num;\n    let mut better_approx = (approx + 1) / 2;\n\n    for _ in 0..10 { \n        approx = better_approx;\n        better_approx = (approx + num / approx) / 2;\n    }\n\n    better_approx\n}","path":"/Users/catmcgee/Documents/Work/noir-vsummit/optimizing/src/main.nr"}},"names":["main"]}